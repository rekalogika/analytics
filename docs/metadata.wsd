@startuml summary_metadata

interface SummaryMetadataFactory {
    +createSummaryMetadata(class-string): SummaryMetadata
}

SummaryMetadataFactory --> SummaryMetadata

class SummaryMetadata {
    +summaryClass: class-string
    +sourceClasses: <class-string>
    +label: TranslatableInterface
    +partition: PartitionMetadata
    +dimensionMetadatas: <DimensionMetadata>
    +measureMetadatas: <MeasureMetadata>
    +getDimensionMetadata(string): DimensionMetadata
    +getMeasureMetadata(string): MeasureMetadata
    +getDimensionPropertyNames(): <string>
    +getFieldByName(string): DimensionMetadata|MeasureMetadata
    +isMeasure(string): bool
    +isDimension(string): bool
    +createPartitionFromSourceValue(mixed, int): Partition
    +createLowestPartitionFromSourceValue(mixed, int): Partition
    +createHighestPartitionFromSourceValue(mixed, int): Partition
    +calculateSourceBoundValueFromPartition(Partition,string): int|string
    +getGroupingsProperty(): string
    +involvedProperties: <class-string,list<string>>
    +resolveFullyQualifiedDimensionName(string): DimensionMetadata|DimensionPropertyMetadata
}

SummaryMetadata *-- DimensionMetadata
SummaryMetadata *-- MeasureMetadata
SummaryMetadata *--- PartitionMetadata

class DimensionMetadata {
    +source: <class-string,ValueResolver>
    +summaryProperty: string
    +label: TranslatableInterface
    +sourceTimeZone: \DateTimeZone
    +summaryTimeZone: \DateTimeZone
    +hierarchy: ?DimensionHierarchyMetadata
    +involvedProperties: <class-string,list<string>>
    +isHierarchical(): bool
}

DimensionMetadata *-- DimensionHierarchyMetadata

class PartitionMetadata {
    +source: <class-string,ReversibleValueResolver>
    +summaryProperty: string
    +partitionClass: class-string
    +partitionLevelProperty: string
    +partitionKeyProperty: string
}

class MeasureMetadata {
    +function: <class-string,AggregateFunction>
    +summaryProperty: string
    +label: TranslatableInterface
    +involvedProperties: <class-string,list<string>>
}

class DimensionHierarchyMetadata {
    +paths: <DimensionPathMetadata>
    +levels: <DimensionLevelMetadata>
    +properties: <DimensionPropertyMetadata>
    +getHierarchyClass(): class-string
    +getProperty(string): DimensionPropertyMetadata
    +getPathMetadatasForLevel(int): <DimensionPathMetadata>
    +getPrimaryPathMetadataForLevel(int): DimensionPathMetadata
    +getGroupingsByPropertyForSelect(string, bool): <string,bool>
    +getGroupingsByLevelForPopulation(int): <int,bool>
    +getGroupingsByLevelForRollUp(int): <int,bool>
    +getLevel(int): DimensionLevelMetadata
    +getLowestLevel(): DimensionLevelMetadata
}

DimensionHierarchyMetadata *-- DimensionPathMetadata
DimensionHierarchyMetadata *-- DimensionLevelMetadata
DimensionHierarchyMetadata *-- DimensionPropertyMetadata

class DimensionPathMetadata {
    +levels: <DimensionLevelMetadata>
    +properties: <DimensionPropertyMetadata>
    +containsLevel(int): bool
    +getHighestLevel(): DimensionLevelMetadata
    +getLowestLevel(): DimensionLevelMetadata
}

DimensionPathMetadata *-- DimensionLevelMetadata
DimensionPathMetadata *-- DimensionPropertyMetadata

class DimensionLevelMetadata {
    +levelId: int
    +properties: <DimensionPropertyMetadata>
    +getPrimaryProperty(): DimensionPropertyMetadata
}

DimensionLevelMetadata *-- DimensionPropertyMetadata

class DimensionPropertyMetadata {
    +name: string
    +hierarchyName: string
    +fullName: string
    +label: TranslatableInterface
    +levelMetadata: DimensionLevelMetadata
}

@enduml
